Q3. Jobposts Data Exploration and Analysis (code in python)
a) Reuse code from Q2 to download the following Kaggle dataset:
Jobposts Data: https://www.kaggle.com/madhab/jobposts/
b) Extract the following fields from the jobpost column:
1. Job Title
2. Position Duration
3. Position Location
4. Job Description
5. Job Responsibilities
6. Required Qualifications
7. Remuneration
8. Application Deadline
9. About Company
c) Identify the company with the most number of job ads in the past 2 years
d) Identify the month with the largest number of job ads over the years
e) Clean text and generate new text from Job Responsibilities column: The new text shall not contain any stop words, and the plural words shall be converted into singular words.
f) Write functions to identify null/NA values and to replace null/NA values with a custom message in “Duration” column
g) Store the results in a new Dataframe/SQL table(s)
h) Write the results to an S3 bucket



from urllib import request
url = 'https://www.kaggle.com/madhab/jobposts/downloads/data%20job%20posts.csv/1'
def download_data(csv_url):
	response = request.urlopen(csv_url)
	csv = response.read()
	csv_str = str(csv)
	lines = csv_str.split("\\n")
	dest_url = r'F:\data job posts.csv'
	fx = open(dest_url, "w")
	for line in lines:
		fx.write(line + "\n")
	fx.close()
download_data(url)

import pandsd as pd
salesdf = pd.read_csv("F:\Sales_Transactions_Dataset_Weekly.csv")
import numpy as np

b.
fields = ["Title",'Duration','Location','JobDescription','JobRequirment','RequiredQual','Salary','Deadline','AboutC']
jobpostdf = pd.read_csv("F:\data job posts.csv",usecols=fields)

c.
fields = ["Title",'Duration','Location','JobDescription','JobRequirment','RequiredQual','Salary','Deadline','AboutC','Company','date']
jobpostdf = pd.read_csv("F:\data job posts.csv",usecols=fields)
jobpostadsdf=jobpostdf.groupby(['Company']).size().reset_index(name='Counts').sort_values(by='Counts',ascending=False).iloc[0:1]

e.
import nltk
stopwords = nltk.corpus.stopwords.words('english')
RE_stopwords = r'\b(?:{})\b'.format('|'.join(stopwords))
# replace '|'-->' ' and drop all stopwords
words = (jobpostdf.JobRequirment
           .str.lower()
           .replace([r'\|', RE_stopwords], [' ', ''], regex=True)
)
jobpostdf.JobRequirment=words

jobpostdf.Duration=jobpostdf.Duration.fillna("Duration value is NA")


f.
jobpostdf.Duration.fillna("Duration value is NA")
