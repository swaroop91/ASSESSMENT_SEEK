Q4. String similarity (code in python):
a) Download test.csv from https://www.kaggle.com/rishisankineni/text-similarity/data
b) Load the data to a Spark/Pandas data frame
c) Calculate similarity between description_x and description_y and store resultant
scores in a new column
d) Parallelise the matching process using SPARK environment.

pyspark --packages com.databricks:spark-csv_2.10:1.4.0
from pyspark.sql import SQLContext
sqlContext = SQLContext(sc)
descdf = sqlContext.read.format('com.databricks.spark.csv').options(header='true', inferschema='true').load('file:///home/cloudera/Desktop/test.csv')
def similar(a, b):
	return SequenceMatcher(None, a, b).ratio()
from difflib import SequenceMatcher
descdf.map(lambda row:(row[0],row[1],row[2],similar(row[1],row[2]))).toDF(["test_id","description_x","description_y","similarity"]).show()
